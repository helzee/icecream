PREPARE getEmployee ( text ) AS
    SELECT firstName, lastName
    FROM Employee
    WHERE firstName ILIKE $1 OR lastName ILIKE $1
    ORDER BY firstName, lastName;

PREPARE getEmployeeID ( text ) AS
    SELECT ID
    FROM Employee
    WHERE badgeNumber = $1;

PREPARE badgeAvail ( text ) AS
    SELECT COUNT(*)
    FROM Employee
    WHERE badgeNumber = $1;
    
PREPARE txAvail ( text ) AS
    SELECT COUNT(*)
    FROM Transaction
    WHERE transactionNumber = $1;

PREPARE itemPartOfTxProd ( int, int ) AS
    SELECT COUNT(*)
    FROM TransactionProduct TP
        JOIN MenuProduct MP ON ( TP.productID = MP.ID)
        JOIN ProductIngredient PI ON ( PI.productID = MP.ID)
    WHERE TP.ID = $1 AND PI.itemID = $2;

PREPARE getEmpNameForTx ( text ) AS
    SELECT CONCAT(firstName, ' ', lastName) AS name
    FROM Employee E
        JOIN Transaction T ON ( T.employeeWorking = E.ID)
    WHERE T.transactionNumber = $1;

PREPARE getTxDate ( text ) AS
    SELECT to_char(timeCompleted::date, 'MM-DD-YYYY')
    FROM Transaction
    WHERE transactionNumber = $1;

PREPARE getTxTime ( text ) AS
    SELECT to_char(timezone('PDT', timeCompleted)::time, 'HH12:MI AM')
    FROM Transaction
    WHERE transactionNumber = $1;

PREPARE getTxProds ( text ) AS
    SELECT TP.ID, P.name, to_char(TP.salesPrice, '$99D99')
    FROM Transaction T
        JOIN TransactionProduct TP ON ( TP.transactionID = T.ID)
        JOIN MenuProduct P ON ( TP.productID = P.ID)
    WHERE T.transactionNumber = $1
    ORDER BY TP.ID;

PREPARE getMods ( int ) AS
    SELECT MM.name,  to_char(M.salesPrice, '+99D99')
    FROM Modification M
        JOIN MenuModification MM ON ( M.menuModificationID = MM.ID)
        JOIN TransactionProduct TP ON ( M.transactionProductID = TP.ID)
    WHERE TP.ID = $1
    ORDER BY M.ID;

PREPARE getRemoves ( int ) AS
    SELECT I.name
    FROM RemoveIngredient R
        JOIN Item I ON ( R.itemID = I.ID)
        JOIN TransactionProduct TP ON ( R.transactionProductID = TP.ID)
    WHERE TP.ID = $1
    ORDER BY I.name;

PREPARE getTxTotal ( text ) AS
    SELECT to_char(T1.tpsum + T2.msum, '$999D99') AS subTotal,
        to_char((T1.tpsum + T2.msum) / 10, '$999D99') AS tax,
        to_char((T1.tpsum + T2.msum) * 1.1, '$999D99') AS total
    FROM ( SELECT SUM(TP.salesPrice) AS tpsum
           FROM Transaction T
            JOIN TransactionProduct TP ON ( TP.transactionID = T.ID)
           WHERE T.transactionNumber = $1
         ) AS T1
        JOIN ( SELECT SUM(M.salesPrice) AS msum
               FROM Transaction T
                JOIN TransactionProduct TP ON ( TP.transactionID = T.ID)
                JOIN Modification M ON ( M.transactionProductID = TP.ID)
               WHERE T.transactionNumber = $1
             ) AS T2 ON (true)
    ;

PREPARE getMoneyStats AS
    SELECT to_char((T1.sum + T2.sum), '$999999D99') AS grossIncome,
        to_char((T2.cost + T3.cost), '$999999D99') AS expenses,
        to_char((T1.sum + T2.sum - T2.cost - T3.cost), '$999999D99') AS netProfit
    FROM TransactionProduct TP
        JOIN ( SELECT SUM(salesPrice)
                FROM TransactionProduct TP
                WHERE isRefunded = false
            ) AS T1 ON (true)
        JOIN ( SELECT SUM(M.salesPrice), SUM(MM.unitsNeeded * I.avgCostPerUnit) AS cost
                FROM TransactionProduct TP
                    JOIN Modification M ON ( M.transactionProductID = TP.ID)
                    JOIN MenuModification MM ON ( M.menuModificationID = MM.ID)
                    JOIN Item I ON ( MM.itemID = I.ID)
                WHERE TP.isRefunded = false
            ) AS T2 ON (true)
        JOIN ( SELECT SUM(PI.unitsNeeded * I.avgCostPerUnit) AS cost
                FROM TransactionProduct TP
                    JOIN MenuProduct MP ON ( TP.productID = MP.ID)
                    JOIN ProductIngredient PI ON ( PI.productID = MP.ID)
                    JOIN Item I ON ( PI.itemID = I.ID)
                WHERE TP.isRefunded = false
            ) AS T3 ON (true)